{
  "version": 3,
  "sources": ["../../../../../node_modules/@capacitor-community/text-to-speech/dist/esm/web.js"],
  "sourcesContent": ["import { WebPlugin } from '@capacitor/core';\nexport class TextToSpeechWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.speechSynthesis = null;\n        if ('speechSynthesis' in window) {\n            this.speechSynthesis = window.speechSynthesis;\n            window.addEventListener('beforeunload', () => {\n                this.stop();\n            });\n        }\n    }\n    async speak(options) {\n        if (!this.speechSynthesis) {\n            this.throwUnsupportedError();\n        }\n        await this.stop();\n        const speechSynthesis = this.speechSynthesis;\n        const utterance = this.createSpeechSynthesisUtterance(options);\n        return new Promise((resolve, reject) => {\n            utterance.onend = () => {\n                resolve();\n            };\n            utterance.onerror = (event) => {\n                reject(event);\n            };\n            speechSynthesis.speak(utterance);\n        });\n    }\n    async stop() {\n        if (!this.speechSynthesis) {\n            this.throwUnsupportedError();\n        }\n        this.speechSynthesis.cancel();\n    }\n    async getSupportedLanguages() {\n        const voices = this.getSpeechSynthesisVoices();\n        const languages = voices.map((voice) => voice.lang);\n        const filteredLanguages = languages.filter((v, i, a) => a.indexOf(v) == i);\n        return { languages: filteredLanguages };\n    }\n    async getSupportedVoices() {\n        const voices = this.getSpeechSynthesisVoices();\n        return { voices };\n    }\n    async isLanguageSupported(options) {\n        const result = await this.getSupportedLanguages();\n        const isLanguageSupported = result.languages.includes(options.lang);\n        return { supported: isLanguageSupported };\n    }\n    async openInstall() {\n        this.throwUnimplementedError();\n    }\n    createSpeechSynthesisUtterance(options) {\n        const voices = this.getSpeechSynthesisVoices();\n        const utterance = new SpeechSynthesisUtterance();\n        const { text, lang, rate, pitch, volume, voice } = options;\n        if (voice) {\n            utterance.voice = voices[voice];\n        }\n        if (volume) {\n            utterance.volume = volume >= 0 && volume <= 1 ? volume : 1;\n        }\n        if (rate) {\n            utterance.rate = rate >= 0.1 && rate <= 10 ? rate : 1;\n        }\n        if (pitch) {\n            utterance.pitch = pitch >= 0 && pitch <= 2 ? pitch : 2;\n        }\n        if (lang) {\n            utterance.lang = lang;\n        }\n        utterance.text = text;\n        return utterance;\n    }\n    getSpeechSynthesisVoices() {\n        if (!this.speechSynthesis) {\n            this.throwUnsupportedError();\n        }\n        if (!this.supportedVoices || this.supportedVoices.length < 1) {\n            this.supportedVoices = this.speechSynthesis.getVoices();\n        }\n        return this.supportedVoices;\n    }\n    throwUnsupportedError() {\n        throw this.unavailable('SpeechSynthesis API not available in this browser.');\n    }\n    throwUnimplementedError() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n"],
  "mappings": ";;;;;;;;AACO,IAAM,kBAAN,cAA8B,UAAU;AAAA,EAC3C,cAAc;AACV,UAAM;AACN,SAAK,kBAAkB;AACvB,QAAI,qBAAqB,QAAQ;AAC7B,WAAK,kBAAkB,OAAO;AAC9B,aAAO,iBAAiB,gBAAgB,MAAM;AAC1C,aAAK,KAAK;AAAA,MACd,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EACM,MAAM,SAAS;AAAA;AACjB,UAAI,CAAC,KAAK,iBAAiB;AACvB,aAAK,sBAAsB;AAAA,MAC/B;AACA,YAAM,KAAK,KAAK;AAChB,YAAM,kBAAkB,KAAK;AAC7B,YAAM,YAAY,KAAK,+BAA+B,OAAO;AAC7D,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,kBAAU,QAAQ,MAAM;AACpB,kBAAQ;AAAA,QACZ;AACA,kBAAU,UAAU,CAAC,UAAU;AAC3B,iBAAO,KAAK;AAAA,QAChB;AACA,wBAAgB,MAAM,SAAS;AAAA,MACnC,CAAC;AAAA,IACL;AAAA;AAAA,EACM,OAAO;AAAA;AACT,UAAI,CAAC,KAAK,iBAAiB;AACvB,aAAK,sBAAsB;AAAA,MAC/B;AACA,WAAK,gBAAgB,OAAO;AAAA,IAChC;AAAA;AAAA,EACM,wBAAwB;AAAA;AAC1B,YAAM,SAAS,KAAK,yBAAyB;AAC7C,YAAM,YAAY,OAAO,IAAI,CAAC,UAAU,MAAM,IAAI;AAClD,YAAM,oBAAoB,UAAU,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC;AACzE,aAAO,EAAE,WAAW,kBAAkB;AAAA,IAC1C;AAAA;AAAA,EACM,qBAAqB;AAAA;AACvB,YAAM,SAAS,KAAK,yBAAyB;AAC7C,aAAO,EAAE,OAAO;AAAA,IACpB;AAAA;AAAA,EACM,oBAAoB,SAAS;AAAA;AAC/B,YAAM,SAAS,MAAM,KAAK,sBAAsB;AAChD,YAAM,sBAAsB,OAAO,UAAU,SAAS,QAAQ,IAAI;AAClE,aAAO,EAAE,WAAW,oBAAoB;AAAA,IAC5C;AAAA;AAAA,EACM,cAAc;AAAA;AAChB,WAAK,wBAAwB;AAAA,IACjC;AAAA;AAAA,EACA,+BAA+B,SAAS;AACpC,UAAM,SAAS,KAAK,yBAAyB;AAC7C,UAAM,YAAY,IAAI,yBAAyB;AAC/C,UAAM,EAAE,MAAM,MAAM,MAAM,OAAO,QAAQ,MAAM,IAAI;AACnD,QAAI,OAAO;AACP,gBAAU,QAAQ,OAAO,KAAK;AAAA,IAClC;AACA,QAAI,QAAQ;AACR,gBAAU,SAAS,UAAU,KAAK,UAAU,IAAI,SAAS;AAAA,IAC7D;AACA,QAAI,MAAM;AACN,gBAAU,OAAO,QAAQ,OAAO,QAAQ,KAAK,OAAO;AAAA,IACxD;AACA,QAAI,OAAO;AACP,gBAAU,QAAQ,SAAS,KAAK,SAAS,IAAI,QAAQ;AAAA,IACzD;AACA,QAAI,MAAM;AACN,gBAAU,OAAO;AAAA,IACrB;AACA,cAAU,OAAO;AACjB,WAAO;AAAA,EACX;AAAA,EACA,2BAA2B;AACvB,QAAI,CAAC,KAAK,iBAAiB;AACvB,WAAK,sBAAsB;AAAA,IAC/B;AACA,QAAI,CAAC,KAAK,mBAAmB,KAAK,gBAAgB,SAAS,GAAG;AAC1D,WAAK,kBAAkB,KAAK,gBAAgB,UAAU;AAAA,IAC1D;AACA,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,wBAAwB;AACpB,UAAM,KAAK,YAAY,oDAAoD;AAAA,EAC/E;AAAA,EACA,0BAA0B;AACtB,UAAM,KAAK,cAAc,yBAAyB;AAAA,EACtD;AACJ;",
  "names": []
}
